import de.undercouch.gradle.tasks.download.Download

buildscript {
    ext {
        grailsVersion = project.grailsVersion
        gormVersion = project.gormVersion
        elasticsearchVersion = project.elasticsearchVersion
        elasticsearchAttachmentsVersion = project.elasticsearchAttachmentsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.ajoberstar:gradle-git:1.4.2'
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
    id 'com.jfrog.artifactory' version '4.0.0'
    id "de.undercouch.download" version "3.2.0"
}

version "2.4.2-ub"
group "org.grails.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'maven-publish'

ext {
    gradleWrapperVersion = project.gradleWrapperVersion
    elasticsearchVersion = project.elasticsearchVersion
    elasticsearchAttachmentsVersion = project.elasticsearchAttachmentsVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

jar {
    exclude "test/**"
    exclude "test/**/**"
}

groovydoc {
    exclude "test/**"
    exclude "test/**/**"
}

sourcesJar {
    exclude "test/**"
    exclude "test/**/**"
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"

    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    compile "org.grails:grails-core"
    compile "org.grails.plugins:hibernate5"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"

    compile "org.apache.logging.log4j:log4j-api:2.7"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'

    compile "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
    compile group: 'org.elasticsearch.client', name: 'transport', version: elasticsearchVersion

    console "org.grails:grails-console"

    profile "org.grails.profiles:web-plugin"

    testRuntime 'com.spatial4j:spatial4j:0.4.1'
    testRuntime 'org.apache.tomcat:tomcat-jdbc'

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-web-testing-support"

    testCompile 'com.vividsolutions:jts:1.13'
    testCompile 'com.googlecode.json-simple:json-simple:1.1.1'

    //compile "org.elasticsearch.plugin:mapper-attachments:${elasticsearchAttachmentsVersion}"
    compile fileTree(dir: "libs/elasticsearch", include: '*.jar')
}

task downloadAttachmentsPlugin(type: Download) {
    src "https://artifacts.elastic.co/downloads/elasticsearch-plugins/mapper-attachments/mapper-attachments-${elasticsearchVersion}.zip"
    dest "libs/mapper-attachments-${elasticsearchVersion}.zip"
    overwrite true
    onlyIfNewer true
}

task downloadAndUnzipAttachmentsPlugin(dependsOn: downloadAttachmentsPlugin) {
    doLast {
        copy {
            from zipTree(downloadAttachmentsPlugin.dest)
            into 'libs/'
        }
        delete 'libs/elasticsearch/commons-codec-1.10.jar'
    }
}

compileJava{
    dependsOn downloadAndUnzipAttachmentsPlugin
}

task cleanLibsDir(type: Delete) {
    delete fileTree(dir: 'libs')
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

check.doLast {
    cleanDataDir.execute()
}

clean.doLast {
    cleanDataDir.execute()
    cleanLibsDir.execute()
}

task cleanDataDir(type: Delete) {
    delete fileTree(dir: 'data')
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

apply from: "gradle/documentation.gradle"

apply from: "gradle/publish.gradle"

grailsPublish {
    githubSlug = 'puneetbehl/elasticsearch-grails-plugin'
    license {
        name = 'Apache-2.0'
    }
    title = "Elasticserach"
    //rep = "grails-plugins"
    desc = "An Elasticsearch plugin for Grails"
    developers = [
            noam: 'Noam Y. Tenne',
            macrcos: 'Marcos Carceles',
            puneet: 'Puneet Behl',
            james: 'James Kleeh'
    ]
}

