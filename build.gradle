buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
		classpath 'org.ajoberstar:gradle-git:1.4.2'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

<<<<<<< HEAD
version "1.0.0.2-ub"
=======
version "1.2.1-ub"
>>>>>>> noamt-master
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
<<<<<<< HEAD
	elasticsearchVersion = "1.0.0.2-ub"
=======
	elasticsearchVersion = "2.3.3"
>>>>>>> noamt-master
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

jar {
	exclude "test/**"
    exclude "test/**/**"
}

groovydoc {
    exclude "test/**"
    exclude "test/**/**"
}

sourcesJar {
    exclude "test/**"
    exclude "test/**/**"
}

def elasticsearchVersion = '2.3.3'

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"

    compile "org.grails:grails-core"
    compile "org.grails.plugins:hibernate4"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"

    compile "org.elasticsearch:elasticsearch:${elasticsearchVersion}"

    testRuntime 'com.spatial4j:spatial4j:0.4.1'
    testCompile 'com.vividsolutions:jts:1.13'
    testCompile 'com.googlecode.json-simple:json-simple:1.1.1'
    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"

    compile "org.elasticsearch.plugin:mapper-attachments:${elasticsearchVersion}"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

check.doLast {
    cleanDataDir.execute()
}

clean.doLast {
    cleanDataDir.execute()
}

task cleanDataDir(type: Delete) {
    delete fileTree(dir: 'data')
}

apply from: "gradle/documentation.gradle"

apply from: "gradle/publish.gradle"
